Prerequisites:

// Azure AD PowerShell for Graph module

Install-Module -Name AzureAD

// Exchange Online PowerShell Module

Install-Module -Name ExchangeOnlineManagement

// Microsoft Teams PowerShell Module

Install-Module -Name MicrosoftTeams



Identify room -> Does Resource exist? -> if no, create resource in exchange -> configure calendar auto accept -> set password to never expire -> assign teams license -> configure teams rooms

//Create Room Mailbox

New-Mailbox -Name $acctUpn -Alias $MailBoxAlias -Room -DisplayName $DisplayName -EnableRoomMailboxAccount $true -RoomMailboxPassword (ConvertTo-SecureString -String $Password -AsPlainText -Force)

// Set Outlook to auto-accept meeting invites and add additional response

Set-CalendarProcessing -Identity $MailboxAlias -AutomateProcessing AutoAccept -AddOrganizerToSubject $false -DeleteComments $false -DeleteSubject $false -RemovePrivateProperty $false -ProcessExternalMeetingMessages $true -AdditionalResponse "This is a Microsoft Teams Meeting Room!"


// Set password to never expire and set usage location

Set-AzureADUser -ObjectID $acctUpn -PasswordPolicies DisablePasswordExpiration

Set -AzureADUser -ObjectID ConferenceRoom01@contoso.com UsageLocation 'US'

// Create an object for a single license type if desired

$License = New-Object -TypeName Microsoft.Open.AzureAD.Model.AssignedLicense

$License.SkuId = $ADLicense

// Create an object for a multiple license type if desired

$Licenses = New-Object -TypeName Microsoft.Open.AzureAD.Model.AssignedLicenses

// Add the single license object to the multiple license object

$Licenses.AddLicenses = $License

// Assign the license to the resource account

Set-AzureADUserLicense -ObjectId ConferenceRoom01@contoso.com -AssignedLicenses $Licenses

// OPTIONAL SETTINGS
// Additional information to be included in responses to meeting requests

$AdditionalResponse=@" <hr style="font-family: Calibri, Arial, Helvetica, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);"><p align="center"><img width="291" height="137"src=https://images.contoso.com/msc17_collaboration_002.png></p><p align="center">This room is equipped with One Touch Join - Did you make this a Microsoft Teams or Skype for Business meeting?</p><p align="center">Become a meeting ninja - <a href=https://aka.ms/TeamsRoomVideo>watch this short video</a>!</p><p align="center"><br></p><hr><img style="margin-right: auto; margin-left: auto; float: none; display: block;"src=https://images.contoso.com/2020/03/contoso-icon.png>"@

Set-CalendarProcessing -Identity $MailboxAlias -AddAdditionalResponse $true -AdditionalResponse $AdditionalResponse

// prevent mailbox from filling up with voicemail

New-CsTeamsCallingPolicy -Identity NoVoiceMail -Description "Do not permit user to have voicemail" -AllowVoicemail AlwaysDisabled

Grant-CsTeamsCallingPolicy -Identity MTR-TVW-Conference1 -PolicyName NoVoiceMail

// MailTips enablement, tells users a message in the InfoBar in Outlook

Set-Mailbox -Identity $MailboxAlias -MailTip "This room is equipped to support Microsoft Teams meetings"

// Assigning Phone Number

$acctUpn= 'MTR-SEA-FocusRoom1@teamsroomslab.com'

$PhoneNumber='+14255553223'

#Get Location ID via Get-CsOnlineLisLocation

$LocationID='c04255ef-0aac-4cc8-b5fe-510c4578f792'

Set-CsPhoneNumberAssignment -Identity $AcctUPN -PhoneNumber $PhoneNumber -LocationID $LocationID -PhoneNumberType CallingPlan

// Places

Set-Place 'MTR-TVW-Conference' -IsWheelChairAccessible $true -Capacity 12 -DisplayDeviceName $True // see more examples online for advanced controls of Set-Place
